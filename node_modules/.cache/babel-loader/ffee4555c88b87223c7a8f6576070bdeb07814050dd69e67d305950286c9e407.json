{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createBlock as _createBlock, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"map-weather-container\"\n};\nconst _hoisted_2 = {\n  class: \"map\"\n};\nconst _hoisted_3 = {\n  class: \"zoom-controls\"\n};\nconst _hoisted_4 = {\n  key: 0,\n  class: \"weather-container\"\n};\nconst _hoisted_5 = {\n  class: \"weather-header\"\n};\nconst _hoisted_6 = {\n  style: {\n    \"font-size\": \"24px\",\n    \"font-weight\": \"bold\",\n    \"border-bottom\": \"1px solid #ccc\"\n  }\n};\nconst _hoisted_7 = {\n  style: {\n    \"color\": \"#aaa\",\n    \"font-size\": \"16px\",\n    \"font-weight\": \"normal\"\n  }\n};\nconst _hoisted_8 = {\n  class: \"weather-details-container\"\n};\nconst _hoisted_9 = {\n  class: \"weather-details\"\n};\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"div\", {\n  style: {\n    \"font-size\": \"18px\",\n    \"font-weight\": \"bold\"\n  }\n}, \"出行智能小助手\", -1 /* HOISTED */);\nconst _hoisted_11 = {\n  class: \"weather-dialog-box\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_bm_label = _resolveComponent(\"bm-label\");\n  const _component_bm_marker = _resolveComponent(\"bm-marker\");\n  const _component_baidu_map = _resolveComponent(\"baidu-map\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 用于显示地图 \"), _createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_baidu_map, {\n    class: \"map\",\n    center: {\n      lng: 121.474,\n      lat: 31.23\n    },\n    zoom: $data.zoom,\n    onClick: $options.handleMapClick\n  }, {\n    default: _withCtx(() => [_createCommentVNode(\" 给特殊地点加上一些标注和说明 \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.markers, (marker, index) => {\n      return _openBlock(), _createBlock(_component_bm_marker, {\n        key: index,\n        position: marker.position,\n        dragging: false,\n        onClick: $event => $options.handleMarkerClick(marker, index)\n      }, {\n        default: _withCtx(() => [_createVNode(_component_bm_label, {\n          content: marker.content,\n          labelStyle: {\n            color: 'red',\n            fontSize: '15px'\n          },\n          offset: {\n            width: -35,\n            height: 30\n          }\n        }, null, 8 /* PROPS */, [\"content\"])]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"position\", \"onClick\"]);\n    }), 128 /* KEYED_FRAGMENT */)), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"button\", {\n      onClick: _cache[0] || (_cache[0] = (...args) => $options.zoomIn && $options.zoomIn(...args))\n    }, \"放大\"), _createElementVNode(\"button\", {\n      onClick: _cache[1] || (_cache[1] = (...args) => $options.zoomOut && $options.zoomOut(...args))\n    }, \"缩小\")])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"zoom\", \"onClick\"])]), _createCommentVNode(\" 用于显示天气 \"), $data.weatherData ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createCommentVNode(\" 显示天气部分的title \"), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"p\", _hoisted_6, [_createTextVNode(_toDisplayString($data.weatherData.lives[0].city) + \"实时天气 \", 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_7, _toDisplayString($data.weatherData.lives[0].reporttime), 1 /* TEXT */)])]), _createCommentVNode(\" 天气的具体信息+出行建议 \"), _createElementVNode(\"div\", _hoisted_8, [_createCommentVNode(\" 显示天气的具体信息 \"), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"p\", null, \"温度🌡️：\" + _toDisplayString($data.weatherData.lives[0].temperature) + \"°C\", 1 /* TEXT */), _createElementVNode(\"p\", null, \"天气☁️：\" + _toDisplayString($data.weatherData.lives[0].weather), 1 /* TEXT */), _createElementVNode(\"p\", null, \"湿度💧：\" + _toDisplayString($data.weatherData.lives[0].humidity) + \"%\", 1 /* TEXT */), _createElementVNode(\"p\", null, \"风向🌬：\" + _toDisplayString($data.weatherData.lives[0].winddirection) + \"风\", 1 /* TEXT */), _createElementVNode(\"p\", null, \"风力💨：\" + _toDisplayString($data.weatherData.lives[0].windpower) + \"级\", 1 /* TEXT */)]), _createCommentVNode(\" 显示具体的出行建议 \"), _createElementVNode(\"div\", null, [_createCommentVNode(\" title \"), _hoisted_10, _createElementVNode(\"div\", _hoisted_11, _toDisplayString($data.dialogBox), 1 /* TEXT */), _createCommentVNode(\" 添加按钮 \"), _createElementVNode(\"button\", {\n    id: \"dress-advice-btn\",\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.getDressAdvice && $options.getDressAdvice(...args))\n  }, \"穿衣建议\"), _createElementVNode(\"button\", {\n    id: \"travel-advice-btn\",\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.getTravelAdvice && $options.getTravelAdvice(...args))\n  }, \"出行建议\"), _createElementVNode(\"button\", {\n    id: \"weather-summary-btn\",\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.getWeatherSummary && $options.getWeatherSummary(...args))\n  }, \"天气概述\"), _createCommentVNode(\" 对话框 \")])])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","style","_createElementVNode","_createElementBlock","_hoisted_1","_createCommentVNode","_hoisted_2","_createVNode","_component_baidu_map","center","lng","lat","zoom","$data","onClick","$options","handleMapClick","_Fragment","_renderList","markers","marker","index","_createBlock","_component_bm_marker","key","position","dragging","$event","handleMarkerClick","_component_bm_label","content","labelStyle","color","fontSize","offset","width","height","_hoisted_3","_cache","args","zoomIn","zoomOut","weatherData","_hoisted_4","_hoisted_5","_hoisted_6","lives","city","_hoisted_7","_toDisplayString","reporttime","_hoisted_8","_hoisted_9","temperature","weather","humidity","winddirection","windpower","_hoisted_10","_hoisted_11","dialogBox","id","getDressAdvice","getTravelAdvice","getWeatherSummary"],"sources":["/Users/mac/Desktop/作业/微服务架构/Microservice-Personal-Project/src/components/map.vue"],"sourcesContent":["<template>\n  <div class=\"map-weather-container\">\n    <!-- 用于显示地图 -->\n    <div class=\"map\">\n      <baidu-map class=\"map\" :center=\"{ lng: 121.474, lat: 31.23 }\" :zoom=\"zoom\" @click=\"handleMapClick\">\n        <!-- 给特殊地点加上一些标注和说明 -->\n        <bm-marker v-for=\"(marker, index) in markers\" :key=\"index\" :position=\"marker.position\" :dragging=\"false\"\n          @click=\"handleMarkerClick(marker, index)\">\n          <bm-label :content=\"marker.content\" :labelStyle=\"{ color: 'red', fontSize: '15px' }\"\n            :offset=\"{ width: -35, height: 30 }\"></bm-label>\n        </bm-marker>\n\n        <div class=\"zoom-controls\">\n          <button @click=\"zoomIn\">放大</button>\n          <button @click=\"zoomOut\">缩小</button>\n        </div>\n      </baidu-map>\n    </div>\n\n    <!-- 用于显示天气 -->\n    <div class=\"weather-container\" v-if=\"weatherData\">\n      <!-- 显示天气部分的title -->\n      <div class=\"weather-header\">\n        <p style=\"font-size: 24px; font-weight: bold; border-bottom: 1px solid #ccc\">\n          {{ weatherData.lives[0].city }}实时天气\n          <span style=\"color: #aaa; font-size: 16px; font-weight: normal\">\n            {{ weatherData.lives[0].reporttime }}\n          </span>\n        </p>\n      </div>\n      <!-- 天气的具体信息+出行建议 -->\n      <div class=\"weather-details-container\">\n        <!-- 显示天气的具体信息 -->\n        <div class=\"weather-details\">\n          <p>温度🌡️：{{ weatherData.lives[0].temperature }}°C</p>\n          <p>天气☁️：{{ weatherData.lives[0].weather }}</p>\n          <p>湿度💧：{{ weatherData.lives[0].humidity }}%</p>\n          <p>风向🌬：{{ weatherData.lives[0].winddirection }}风</p>\n          <p>风力💨：{{ weatherData.lives[0].windpower }}级</p>\n        </div>\n        <!-- 显示具体的出行建议 -->\n        <div>\n          <!-- title -->\n          <div style=\"font-size: 18px; font-weight: bold;\">出行智能小助手</div>\n          <div class=\"weather-dialog-box\">{{ dialogBox }}</div>\n          <!-- 添加按钮 -->\n          <button id=\"dress-advice-btn\" @click=\"getDressAdvice\">穿衣建议</button>\n          <button id=\"travel-advice-btn\" @click=\"getTravelAdvice\">出行建议</button>\n          <button id=\"weather-summary-btn\" @click=\"getWeatherSummary\">天气概述</button>\n          <!-- 对话框 -->\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n/* eslint-disable */\nimport {\n  BaiduMap,\n  BmWalking,\n  BmInfoWindow,\n  BmBoundary,\n  BmScale,\n  BmMarker,\n  BmLabel,\n} from \"vue-baidu-map-3x\";\nimport { ref, onMounted } from \"vue\";\nimport axios from \"axios\";\n// import { Configuration, OpenAIApi } from \"openai\"; // 根据实际情况调整库的导入路径\nimport OpenAI from \"openai\";\nexport default {\n  components: {\n    BaiduMap,\n    BmWalking,\n    BmInfoWindow,\n    BmBoundary,\n    BmScale,\n    BmMarker,\n    BmLabel,\n  },\n\n  data() {\n    return {\n      center: { lat: 39.9, lng: 116.4 },\n      zoom: 15,\n      //一些景点坐标点\n      markers: [\n        {\n          position: { lng: 121.4912, lat: 31.2438 },\n          content: \"南京东路\",\n          show: false,\n        },\n        {\n          position: { lng: 121.4811, lat: 31.2346 },\n          content: \"人民广场\",\n          show: false,\n        },\n        {\n          position: { lng: 121.5073, lat: 31.2437 },\n          content: \"陆家嘴\",\n          show: false,\n        },\n        {\n          position: { lng: 121.4972, lat: 31.2429 },\n          content: \"外滩\",\n          show: false,\n        },\n        {\n          position: { lng: 121.4972, lat: 31.2489 },\n          content: \"外白渡桥\",\n          show: false,\n        },\n        {\n          position: { lng: 121.4896, lat: 31.2482 },\n          content: \"乍浦路桥\",\n          show: false,\n        },\n        {\n          position: { lng: 121.4943, lat: 31.2343 },\n          content: \"豫园\",\n          show: false,\n        },\n        {\n          position: { lng: 121.483, lat: 31.2342 },\n          content: \"上海博物馆\",\n          show: false,\n        },\n        {\n          position: { lng: 121.4746, lat: 31.2266 },\n          content: \"淮海中路\",\n          show: false,\n        },\n        {\n          position: { lng: 121.5083, lat: 31.2469 },\n          content: \"东方明珠\",\n          show: false,\n        },\n        {\n          position: { lng: 121.4526, lat: 31.2292 },\n          content: \"静安寺\",\n          show: false,\n        },\n        {\n          position: { lng: 121.4449, lat: 31.211 },\n          content: \"武康大楼\",\n          show: false,\n        },\n        {\n          position: { lng: 121.4455, lat: 31.2102 },\n          content: \"宋庆龄故居\",\n          show: false,\n        },\n        {\n          position: { lng: 121.4427, lat: 31.2015 },\n          content: \"徐家汇\",\n          show: false,\n        },\n        {\n          position: { lng: 121.4759, lat: 31.2139 },\n          content: \"田子坊\",\n          show: false,\n        },\n        {\n          position: { lng: 121.4812, lat: 31.2229 },\n          content: \"中共一大会址\",\n          show: false,\n        },\n        {\n          position: { lng: 121.5076, lat: 31.2132 },\n          content: \"南浦大桥\",\n          show: false,\n        },\n        {\n          position: { lng: 121.4691, lat: 31.2424 },\n          content: \"上海自然博物馆\",\n          show: false,\n        },\n        {\n          position: { lng: 121.4761, lat: 31.2199 },\n          content: \"思南公馆\",\n          show: false,\n        },\n        {\n          position: { lng: 121.4761, lat: 31.2199 },\n          content: \"四川北路\",\n          show: false,\n        },\n        {\n          position: { lng: 121.4761, lat: 31.2199 },\n          content: \"思南公馆\",\n          show: false,\n        },\n        {\n          position: { lng: 121.4899, lat: 31.2776 },\n          content: \"鲁迅公园\",\n          show: false,\n        },\n        {\n          position: { lng: 121.4908, lat: 31.2581 },\n          content: \"四川北路\",\n          show: false,\n        },\n        {\n          position: { lng: 121.5055, lat: 31.2529 },\n          content: \"北外滩\",\n          show: false,\n        },\n        {\n          position: { lng: 121.5331, lat: 31.2561 },\n          content: \"杨浦滨江\",\n          show: false,\n        },\n        {\n          position: { lng: 121.49, lat: 31.2711 },\n          content: \"甜爱路\",\n          show: false,\n        },\n        {\n          position: { lng: 121.488, lat: 31.2696 },\n          content: \"多伦路文化名人街\",\n          show: false,\n        },\n        {\n          position: { lng: 121.5088, lat: 31.2888 },\n          content: \"同济大学\",\n          show: false,\n        },\n        {\n          position: { lng: 121.5055, lat: 31.2529 },\n          content: \"北外滩\",\n          show: false,\n        },\n        {\n          position: { lng: 121.5055, lat: 31.2529 },\n          content: \"北外滩\",\n          show: false,\n        },\n        {\n          position: { lng: 121.5055, lat: 31.2529 },\n          content: \"北外滩\",\n          show: false,\n        },\n        {\n          position: { lng: 121.5055, lat: 31.2529 },\n          content: \"北外滩\",\n          show: false,\n        },\n        {\n          position: { lng: 121.5055, lat: 31.2529 },\n          content: \"北外滩\",\n          show: false,\n        },\n      ],\n      weatherData: null, //存储天气数据\n      city: \"310000\", //上海\n      selectedMarkerIndex: -1, // 记录选中的标记索引\n      dialogBox:\"点击下面的按钮以获得智能小助手建议～\"\n    };\n  },\n  watch: {\n    weatherData(newData) {\n      console.log(newData);\n      // 在这里执行你希望在 weatherData 更新后立即执行的逻辑\n      // console.log(this.weatherData);\n    },\n  },\n  created() {\n    this.getWeatherData();\n  },\n\n  mounted() {\n    this.mapInstance = this.$refs.map ? this.$refs.map.getMap() : null;\n    // this.getWeatherData();\n  },\n\n  methods: {\n    //通过点击地图上的点获得该点具体的地点名称\n    handleMapClick(event) {\n      const point = new BMap.Point(event.point.lng, event.point.lat);\n      const geoc = new BMap.Geocoder();\n\n      // 调用百度地图 API 的逆地理编码方法获取地名\n      geoc.getLocation(point, (result) => {\n        if (result) {\n          const address = result.address; // 地名\n          const lng = result.point.lng; // 经度\n          const lat = result.point.lat; // 纬度\n\n          // 处理获取到的地名、经纬度数据\n          console.log(\"地名:\", address);\n          console.log(\"经度:\", lng);\n          console.log(\"纬度:\", lat);\n        }\n      });\n    },\n    //放大地图\n    zoomIn() {\n      this.zoom += 1; // 放大地图缩放级别\n      // this.$refs.baiduMap.setZoom(this.zoom); // 调用 setZoom 方法更新地图缩放级别\n    },\n    //缩小地图\n    zoomOut() {\n      this.zoom -= 1; // 缩小地图缩放级别\n      // this.$refs.baiduMap.setZoom(this.zoom); // 调用 setZoom 方法更新地图缩放级别\n    },\n    //调用天气api，已经可以调取成功\n    getWeatherData() {\n      const key = \"\t3f6157ccb2e4ec191a030932e211ffaa\"; // 将 `your key` 替换成你的高德开发者key\n      const url = `https://restapi.amap.com/v3/weather/weatherInfo?key=${key}&city=${this.city}`;\n      console.log(\"获取天气\");\n      axios\n        .get(url)\n        .then((response) => {\n          if (response.status === 200) {\n            this.weatherData = response.data;\n            console.log(response.data);\n          }\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    },\n    //调用Wiki百科API\n    async searchWiki(keyword) {\n      try {\n        const response = await axios.get(\"https://zh.wikipedia.org/w/api.php\", {\n          params: {\n            format: \"json\",\n            action: \"query\",\n            generator: \"search\",\n            gsrnamespace: 0,\n            gsrlimit: 5,\n            prop: \"pageimages|extracts\",\n            pilimit: \"max\",\n            exintro: true,\n            explaintext: true,\n            exsentences: 1,\n            exlimit: \"max\",\n            origin: \"*\",\n            gsrsearch: keyword,\n          },\n        });\n        console.log(response.data.query.pages);\n        // var href=\"http://en.wikipedia.org/wiki/\"+encodeURIComponent(response.data.query.pages[0].title)\n        // console.log(href)\n      } catch (error) {\n        console.error(\"Error:\", error);\n      }\n    },\n    handleMarkerClick(marker, index) {\n      // const details = marker.name; // 假设标记对象中有一个属性 name 存储地点名称\n      console.log(\"点击了\" + index);\n      const details = this.markers[index].content;\n      console.log(details);\n      //调用Wiki的接口\n      var href = this.searchWiki(details);\n      //调用GPT接口\n      this.initGPT3(details);\n    },\n\n    //点击穿衣按钮之后获取穿衣建议\n    getDressAdvice() {\n      const details =\n        \"已知今天上海的天气数据如下所示：\" +\n        \"湿度：\" +\n        this.weatherData.lives[0].humidity +\n        \"，温度：\" +\n        this.weatherData.lives[0].temperature +\n        \"，天气：\" +\n        this.weatherData.lives[0].weather +\n        \"，风力：\" +\n        this.weatherData.lives[0].windpower +\n        \"，请问可以给出穿衣建议吗？比如说今天适合穿什么样的衣服？比如如果温度高于25度就适合穿短袖，如果温度在17到25之间左右就可以穿衬衫等等（用可爱俏皮的语句直接生成一段话，50到100字左右，不要列出一点一点的）\";\n      console.log(details);\n      const response = this.initGPT3(details,1);\n      console.log(response)\n      this.showResponse(response);\n    },\n    //点击出行按钮之后获取出行建议\n    getTravelAdvice() {\n      const response = initGPT3('出行建议');\n      this.showResponse(response);\n    },\n    //点击天气概述按钮之后获取天气概述\n    getWeatherSummary() {\n      const response = initGPT3('天气概述');\n      this.showResponse(response);\n    },\n    showResponse(response) {\n      // 将回复显示在对话框中\n      this.dialogBox = \"正在生成中\";\n    },\n    \n    async initGPT3(details,choice) {\n      const API_KEY = \"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\"; //输入API Key\n      const openai = new OpenAI({\n        apiKey: API_KEY,\n        dangerouslyAllowBrowser: true,\n      });\n      console.log(\"正在生成介绍\" + details + \"的信息\");\n      const chatCompletion = await openai.chat.completions.create({\n        messages: [\n          {\n            role: \"user\",\n            content: `你好，${details}`,\n          },\n        ],\n        model: \"gpt-3.5-turbo\",\n      });\n      console.log(chatCompletion);\n      console.log(chatCompletion.choices[0].message.content);\n      // 说明此时是在生成智能出行小助手\n      if(choice==1){\n        //显示在消息框内\n        this.dialogBox=chatCompletion.choices[0].message.content;\n      }\n      else{\n\n      }\n    },\n\n  }\n};\n</script>\n\n<style>\n.map-weather-container {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  /* 将屏幕分为两列 */\n}\n\n.map {\n  /* position: relative; */\n  grid-column: 1 / 2;\n  /* 将map容器放在第一列 */\n  display: flex;\n  width: 97%;\n  height: 950px;\n}\n\n.zoom-controls {\n  position: absolute;\n  top: 10px;\n  left: 10px;\n  z-index: 9999;\n}\n\n.weather-container {\n  /* position: absolute; */\n  /* display: flex; */\n  grid-column: 2 / 3;\n  /* 将weather-container容器放在第二列 */\n  width: 96%;\n  height: 283px;\n  top: 10px;\n  left: 10px;\n  z-index: 9999;\n  background-color: #b0e2ff;\n  /* 设置背景颜色为浅蓝色 */\n  border-radius: 10px;\n  /* 设置圆角边框半径为10px */\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  /* 设置阴影效果 */\n  /* 添加其他样式 */\n}\n\n.weather-header {\n  margin-left: 28px;\n  margin-right: 28px;\n}\n\n.weather-details {\n  grid-column: 1 / 2;\n  /* 将details容器放在第一列 */\n  margin-left: 28px;\n}\n\n.weather-details-container {\n  display: grid;\n  grid-template-columns: 1fr 3fr;\n  /* 将屏幕分为四份，第一列占据一个份额，第二列占据三个份额 */\n}\n\n.weather-dialog-box {\n  width: 94%;\n  height: 110px;\n  margin-top: 10px;\n  background-color: whitesmoke;\n  border-radius: 6px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  /* 设置阴影效果 */\n}\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}