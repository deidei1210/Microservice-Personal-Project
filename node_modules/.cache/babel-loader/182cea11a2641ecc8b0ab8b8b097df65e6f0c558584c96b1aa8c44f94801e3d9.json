{"ast":null,"code":"export default {\n  name: 'MapContainer',\n  props: {\n    msg: String\n  }\n};\nvar map;\nfunction initMap() {\n  //初始化地图\n  map = new TMap.Map('mapContainer', {\n    center: new TMap.LatLng(31.242497, 121.488892),\n    zoom: 14\n  });\n  var lat = 31.242497;\n  var lng = 121.488892;\n  //绑定点击事件，获取纬度和经度\n  map.on(\"click\", function (evt) {\n    //获取纬度\n    lat = evt.latLng.getLat().toFixed(6);\n    //获取经度\n    lng = evt.latLng.getLng().toFixed(6);\n    // position.innerHTML = lat + \",\" + lng;\n  });\n\n  console.log(lat);\n  console.log(lng);\n  var startPosition = new TMap.LatLng(lat, lng); // 路线规划起点\n  var endPosition = new TMap.LatLng(31.296605, 121.506377); // 路线规划终点\n  var marker = new TMap.MultiMarker({\n    // 创造MultiMarker显示起终点标记\n    id: 'marker-layer',\n    map: map,\n    styles: {\n      start: new TMap.MarkerStyle({\n        width: 25,\n        height: 35,\n        anchor: {\n          x: 16,\n          y: 32\n        },\n        src: 'https://mapapi.qq.com/web/lbs/javascriptGL/demo/img/start.png'\n      }),\n      end: new TMap.MarkerStyle({\n        width: 25,\n        height: 35,\n        anchor: {\n          x: 16,\n          y: 32\n        },\n        src: 'https://mapapi.qq.com/web/lbs/javascriptGL/demo/img/end.png'\n      })\n    },\n    geometries: [{\n      id: 'start',\n      styleId: 'start',\n      position: startPosition\n    }, {\n      id: 'end',\n      styleId: 'end',\n      position: endPosition\n    }]\n  });\n  var driving = new TMap.service.Driving({\n    // 新建一个驾车路线规划类\n    mp: false,\n    // 是否返回多方案\n    policy: 'PICKUP,NAV_POINT_FIRST' // 规划策略\n  });\n\n  driving.search({\n    from: startPosition,\n    to: endPosition\n  }).then(result => {\n    // 搜索路径\n    result.result.routes[0].steps.forEach((step, index) => {\n      document.getElementById('instruction').innerHTML += `<p>${index + 1}. ${step.instruction}</p>`;\n      // 展示路线引导\n    });\n\n    displayPolyline(result.result.routes[0].polyline); // 绘制路径折线\n  });\n}\n\nfunction displayPolyline(pl) {\n  // 创建 MultiPolyline显示路径折线\n  var polylineLayer = new TMap.MultiPolyline({\n    id: 'polyline-layer',\n    map: map,\n    styles: {\n      style_blue: new TMap.PolylineStyle({\n        color: '#3777FF',\n        width: 8,\n        borderWidth: 5,\n        borderColor: '#FFF',\n        lineCap: 'round'\n      })\n    },\n    geometries: [{\n      id: 'pl_1',\n      styleId: 'style_blue',\n      paths: pl\n    }]\n  });\n}","map":{"version":3,"names":["name","props","msg","String","map","initMap","TMap","Map","center","LatLng","zoom","lat","lng","on","evt","latLng","getLat","toFixed","getLng","console","log","startPosition","endPosition","marker","MultiMarker","id","styles","start","MarkerStyle","width","height","anchor","x","y","src","end","geometries","styleId","position","driving","service","Driving","mp","policy","search","from","to","then","result","routes","steps","forEach","step","index","document","getElementById","innerHTML","instruction","displayPolyline","polyline","pl","polylineLayer","MultiPolyline","style_blue","PolylineStyle","color","borderWidth","borderColor","lineCap","paths"],"sources":["/Users/mac/Desktop/作业/微服务架构/your-project-name/src/components/map.vue"],"sourcesContent":["<template>\n    <div id=\"mapContainer\"></div>\n    <div id=\"panel\">\n        <p>请在右侧示例代码第10行填入您的key，并执行查看运行结果（key可在控制台应用管理中自行创建）</p>\n        <h4>驾车路线规划</h4>\n        <div id=\"instruction\"></div>\n    </div>\n</template>\n\n<script>\nexport default {\n  name: 'MapContainer',\n  props: {\n    msg: String\n  }\n}\nvar map;\n    function initMap() {\n        //初始化地图\n        map = new TMap.Map('mapContainer', {\n            center: new TMap.LatLng(31.242497, 121.488892),\n            zoom: 14,\n        });\n        var lat = 31.242497\n        var lng = 121.488892\n        //绑定点击事件，获取纬度和经度\n        map.on(\"click\", function (evt) {\n            //获取纬度\n            lat = evt.latLng.getLat().toFixed(6);\n            //获取经度\n            lng = evt.latLng.getLng().toFixed(6);\n            // position.innerHTML = lat + \",\" + lng;\n\n        })\n        console.log(lat)\n        console.log(lng)\n        var startPosition = new TMap.LatLng(lat, lng); // 路线规划起点\n        var endPosition = new TMap.LatLng(31.296605, 121.506377); // 路线规划终点\n        var marker = new TMap.MultiMarker({\n            // 创造MultiMarker显示起终点标记\n            id: 'marker-layer',\n            map: map,\n            styles: {\n                start: new TMap.MarkerStyle({\n                    width: 25,\n                    height: 35,\n                    anchor: { x: 16, y: 32 },\n                    src: 'https://mapapi.qq.com/web/lbs/javascriptGL/demo/img/start.png',\n                }),\n                end: new TMap.MarkerStyle({\n                    width: 25,\n                    height: 35,\n                    anchor: { x: 16, y: 32 },\n                    src: 'https://mapapi.qq.com/web/lbs/javascriptGL/demo/img/end.png',\n                }),\n            },\n            geometries: [\n                {\n                    id: 'start',\n                    styleId: 'start',\n                    position: startPosition,\n                },\n                {\n                    id: 'end',\n                    styleId: 'end',\n                    position: endPosition,\n                },\n            ],\n        });\n\n        var driving = new TMap.service.Driving({\n            // 新建一个驾车路线规划类\n            mp: false, // 是否返回多方案\n            policy: 'PICKUP,NAV_POINT_FIRST', // 规划策略\n        });\n        driving.search({ from: startPosition, to: endPosition }).then((result) => {\n            // 搜索路径\n            result.result.routes[0].steps.forEach((step, index) => {\n                document.getElementById('instruction').innerHTML += `<p>${index + 1}. ${step.instruction\n                    }</p>`;\n                // 展示路线引导\n            });\n            displayPolyline(result.result.routes[0].polyline); // 绘制路径折线\n        });\n\n    }\n\n    function displayPolyline(pl) {\n              // 创建 MultiPolyline显示路径折线\n              var polylineLayer = new TMap.MultiPolyline({\n            id: 'polyline-layer',\n            map: map,\n            styles: {\n                style_blue: new TMap.PolylineStyle({\n                    color: '#3777FF',\n                    width: 8,\n                    borderWidth: 5,\n                    borderColor: '#FFF',\n                    lineCap: 'round',\n                }),\n            },\n            geometries: [\n                {\n                    id: 'pl_1',\n                    styleId: 'style_blue',\n                    paths: pl,\n                },\n            ],\n        });\n    }\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style>\n    html,\n    body {\n        height: 100%;\n        margin: 0px;\n        padding: 0px;\n    }\n\n    #mapContainer {\n        width: 100%;\n        height: 100%;\n    }\n\n    #panel {\n        position: absolute;\n        background: #FFF;\n        width: 350px;\n        padding: 20px;\n        z-index: 9999;\n        top: 30px;\n        left: 30px;\n    }\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}