{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"allmap\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1);\n}","map":{"version":3,"names":["id","_createElementBlock","_hoisted_1"],"sources":["/Users/mac/Desktop/作业/微服务架构/your-project-name/src/components/map.vue"],"sourcesContent":["<template>\n<div id=\"allmap\"></div></template>\n\n<script>\nimport { BaiduMap } from 'vue-baidu-map-3x'\nexport default {\n  data() {\n    return {\n      steps: [],\n    };\n  },\n  mounted() {\n    this.initMap();\n  },\n  methods: {\n    initMap() {\n      //初始化地图\n      const map = new TMap.Map('mapContainer', {\n        center: new TMap.LatLng(31.242497, 121.488892),\n        zoom: 14,\n      });\n      let lat = 31.242497;\n      let lng = 121.488892;\n\n      //绑定点击事件，获取纬度和经度\n      map.on('click', (evt) => {\n        //获取纬度\n        lat = evt.latLng.getLat().toFixed(6);\n        //获取经度\n        lng = evt.latLng.getLng().toFixed(6);\n      });\n\n      const startPosition = new TMap.LatLng(lat, lng); // 路线规划起点\n      const endPosition = new TMap.LatLng(31.296605, 121.506377); // 路线规划终点\n      const marker = new TMap.MultiMarker({\n        id: 'marker-layer',\n        map: map,\n        styles: {\n          start: new TMap.MarkerStyle({\n            width: 25,\n            height: 35,\n            anchor: { x: 16, y: 32 },\n            src: 'https://mapapi.qq.com/web/lbs/javascriptGL/demo/img/start.png',\n          }),\n          end: new TMap.MarkerStyle({\n            width: 25,\n            height: 35,\n            anchor: { x: 16, y: 32 },\n            src: 'https://mapapi.qq.com/web/lbs/javascriptGL/demo/img/end.png',\n          }),\n        },\n        geometries: [\n          {\n            id: 'start',\n            styleId: 'start',\n            position: startPosition,\n          },\n          {\n            id: 'end',\n            styleId: 'end',\n            position: endPosition,\n          },\n        ],\n      });\n\n      const driving = new TMap.service.Driving({\n        mp: false,\n        policy: 'PICKUP,NAV_POINT_FIRST',\n      });\n      driving.search({ from: startPosition, to: endPosition }).then((result) => {\n        this.steps = result.result.routes[0].steps;\n        this.displayPolyline(result.result.routes[0].polyline);\n      });\n    },\n    displayPolyline(pl) {\n      const polylineLayer = new TMap.MultiPolyline({\n        id: 'polyline-layer',\n        map: map,\n        styles: {\n          style_blue: new TMap.PolylineStyle({\n            color: '#3777FF',\n            width: 8,\n            borderWidth: 5,\n            borderColor: '#FFF',\n            lineCap: 'round',\n          }),\n        },\n        geometries: [\n          {\n            id: 'pl_1',\n            styleId: 'style_blue',\n            paths: pl,\n          },\n        ],\n      });\n    },\n  },\n};\n</script>\n\n<style>\nhtml,\nbody {\n  height: 100%;\n  margin: 0px;\n  padding: 0px;\n}\n\n#mapContainer {\n  width: 100%;\n  height: 100%;\n}\n\n#panel {\n  position: absolute;\n  background: #FFF;\n  width: 350px;\n  padding: 20px;\n  z-index: 9999;\n  top: 30px;\n  left: 30px;\n}\n</style>"],"mappings":";;EACKA,EAAE,EAAC;AAAQ;;uBAAhBC,mBAAA,CAAuB,OAAvBC,UAAuB"},"metadata":{},"sourceType":"module","externalDependencies":[]}