{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"mapContainer\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_2 = {\n  id: \"panel\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"p\", null, \"请在右侧示例代码第10行填入您的key，并执行查看运行结果（key可在控制台应用管理中自行创建）\", -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"h4\", null, \"驾车路线规划\", -1 /* HOISTED */);\nconst _hoisted_5 = {\n  id: \"instruction\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _hoisted_4, _createElementVNode(\"div\", _hoisted_5, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.steps, (step, index) => {\n    return _openBlock(), _createElementBlock(\"p\", {\n      key: index\n    }, _toDisplayString(index + 1) + \". \" + _toDisplayString(step.instruction), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["_createElementVNode","id","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_Fragment","_renderList","$data","steps","step","index","key","_toDisplayString","instruction"],"sources":["/Users/mac/Desktop/作业/微服务架构/your-project-name/src/components/map.vue"],"sourcesContent":["<template>\n  <div>\n    <div id=\"mapContainer\"></div>\n    <div id=\"panel\">\n      <p>请在右侧示例代码第10行填入您的key，并执行查看运行结果（key可在控制台应用管理中自行创建）</p>\n      <h4>驾车路线规划</h4>\n      <div id=\"instruction\">\n        <p v-for=\"(step, index) in steps\" :key=\"index\">{{ index + 1 }}. {{ step.instruction }}</p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      steps: [],\n    };\n  },\n  mounted() {\n    this.initMap();\n  },\n  methods: {\n    initMap() {\n      //初始化地图\n      const map = new TMap.Map('mapContainer', {\n        center: new TMap.LatLng(31.242497, 121.488892),\n        zoom: 14,\n      });\n      let lat = 31.242497;\n      let lng = 121.488892;\n\n      //绑定点击事件，获取纬度和经度\n      map.on('click', (evt) => {\n        //获取纬度\n        lat = evt.latLng.getLat().toFixed(6);\n        //获取经度\n        lng = evt.latLng.getLng().toFixed(6);\n      });\n\n      const startPosition = new TMap.LatLng(lat, lng); // 路线规划起点\n      const endPosition = new TMap.LatLng(31.296605, 121.506377); // 路线规划终点\n      const marker = new TMap.MultiMarker({\n        id: 'marker-layer',\n        map: map,\n        styles: {\n          start: new TMap.MarkerStyle({\n            width: 25,\n            height: 35,\n            anchor: { x: 16, y: 32 },\n            src: 'https://mapapi.qq.com/web/lbs/javascriptGL/demo/img/start.png',\n          }),\n          end: new TMap.MarkerStyle({\n            width: 25,\n            height: 35,\n            anchor: { x: 16, y: 32 },\n            src: 'https://mapapi.qq.com/web/lbs/javascriptGL/demo/img/end.png',\n          }),\n        },\n        geometries: [\n          {\n            id: 'start',\n            styleId: 'start',\n            position: startPosition,\n          },\n          {\n            id: 'end',\n            styleId: 'end',\n            position: endPosition,\n          },\n        ],\n      });\n\n      const driving = new TMap.service.Driving({\n        mp: false,\n        policy: 'PICKUP,NAV_POINT_FIRST',\n      });\n      driving.search({ from: startPosition, to: endPosition }).then((result) => {\n        this.steps = result.result.routes[0].steps;\n        this.displayPolyline(result.result.routes[0].polyline);\n      });\n    },\n    displayPolyline(pl) {\n      const polylineLayer = new TMap.MultiPolyline({\n        id: 'polyline-layer',\n        map: map,\n        styles: {\n          style_blue: new TMap.PolylineStyle({\n            color: '#3777FF',\n            width: 8,\n            borderWidth: 5,\n            borderColor: '#FFF',\n            lineCap: 'round',\n          }),\n        },\n        geometries: [\n          {\n            id: 'pl_1',\n            styleId: 'style_blue',\n            paths: pl,\n          },\n        ],\n      });\n    },\n  },\n};\n</script>\n\n<style>\nhtml,\nbody {\n  height: 100%;\n  margin: 0px;\n  padding: 0px;\n}\n\n#mapContainer {\n  width: 100%;\n  height: 100%;\n}\n\n#panel {\n  position: absolute;\n  background: #FFF;\n  width: 350px;\n  padding: 20px;\n  z-index: 9999;\n  top: 30px;\n  left: 30px;\n}\n</style>"],"mappings":";gCAEIA,mBAAA,CAA6B;EAAxBC,EAAE,EAAC;AAAc;;EACjBA,EAAE,EAAC;AAAO;gCACbD,mBAAA,CAAuD,WAApD,kDAAgD;gCACnDA,mBAAA,CAAe,YAAX,QAAM;;EACLC,EAAE,EAAC;AAAa;;uBALzBC,mBAAA,CASM,cARJC,UAA6B,EAC7BH,mBAAA,CAMM,OANNI,UAMM,GALJC,UAAuD,EACvDC,UAAe,EACfN,mBAAA,CAEM,OAFNO,UAEM,I,kBADJL,mBAAA,CAA0FM,SAAA,QAAAC,WAAA,CAA/DC,KAAA,CAAAC,KAAK,GAArBC,IAAI,EAAEC,KAAK;yBAAtBX,mBAAA,CAA0F;MAAvDY,GAAG,EAAED;IAAK,GAAAE,gBAAA,CAAKF,KAAK,QAAO,IAAE,GAAAE,gBAAA,CAAGH,IAAI,CAACI,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}