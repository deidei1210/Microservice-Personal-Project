{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createBlock as _createBlock, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"map-weather-container\"\n};\nconst _hoisted_2 = {\n  class: \"map\"\n};\nconst _hoisted_3 = {\n  class: \"zoom-controls\"\n};\nconst _hoisted_4 = {\n  class: \"showAddress\"\n};\nconst _hoisted_5 = {\n  class: \"info\"\n};\nconst _hoisted_6 = {\n  key: 0,\n  class: \"weather-container\"\n};\nconst _hoisted_7 = {\n  class: \"weather-header\"\n};\nconst _hoisted_8 = {\n  style: {\n    \"font-size\": \"24px\",\n    \"font-weight\": \"bold\",\n    \"border-bottom\": \"1px solid #ccc\"\n  }\n};\nconst _hoisted_9 = {\n  style: {\n    \"color\": \"#aaa\",\n    \"font-size\": \"16px\",\n    \"font-weight\": \"normal\"\n  }\n};\nconst _hoisted_10 = {\n  class: \"weather-details-container\"\n};\nconst _hoisted_11 = {\n  class: \"weather-details\"\n};\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"div\", {\n  style: {\n    \"font-size\": \"18px\",\n    \"font-weight\": \"bold\"\n  }\n}, \"出行智能小助手\", -1 /* HOISTED */);\nconst _hoisted_13 = {\n  class: \"weather-dialog-box\"\n};\nconst _hoisted_14 = {\n  class: \"dialog-content\"\n};\nconst _hoisted_15 = {\n  class: \"wiki-search\"\n};\nconst _hoisted_16 = {\n  class: \"weather-header\"\n};\nconst _hoisted_17 = {\n  style: {\n    \"font-size\": \"24px\",\n    \"font-weight\": \"bold\",\n    \"border-bottom\": \"1px solid #ccc\"\n  }\n};\nconst _hoisted_18 = {\n  style: {\n    \"color\": \"#aaa\",\n    \"font-size\": \"16px\",\n    \"font-weight\": \"normal\"\n  }\n};\nconst _hoisted_19 = {\n  class: \"searchresult\"\n};\nconst _hoisted_20 = {\n  class: \"page-item\"\n};\nconst _hoisted_21 = [\"src\", \"alt\"];\nconst _hoisted_22 = {\n  class: \"page-content\"\n};\nconst _hoisted_23 = [\"href\"];\nconst _hoisted_24 = {\n  style: {\n    \"font-size\": \"small\"\n  }\n};\nconst _hoisted_25 = {\n  class: \"guide-container\"\n};\nconst _hoisted_26 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"weather-header\"\n}, [/*#__PURE__*/_createElementVNode(\"p\", {\n  style: {\n    \"font-size\": \"24px\",\n    \"font-weight\": \"bold\",\n    \"border-bottom\": \"1px solid #ccc\"\n  }\n}, \" 路线规划🚗 \")], -1 /* HOISTED */);\nconst _hoisted_27 = {\n  style: {\n    \"display\": \"inline-block\"\n  }\n};\nconst _hoisted_28 = {\n  key: 0\n};\nconst _hoisted_29 = {\n  key: 1\n};\nconst _hoisted_30 = {\n  key: 0\n};\nconst _hoisted_31 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_bm_label = _resolveComponent(\"bm-label\");\n  const _component_bm_marker = _resolveComponent(\"bm-marker\");\n  const _component_bm_walking = _resolveComponent(\"bm-walking\");\n  const _component_baidu_map = _resolveComponent(\"baidu-map\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 用于显示地图 \"), _createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_baidu_map, {\n    class: \"map\",\n    center: $data.center,\n    zoom: $data.zoom,\n    \"scroll-wheel-zoom\": true,\n    onClick: $options.handleMapClick\n  }, {\n    default: _withCtx(() => [_createCommentVNode(\" 给特殊地点加上一些标注和说明 \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.markers, (marker, index) => {\n      return _openBlock(), _createBlock(_component_bm_marker, {\n        key: index,\n        position: marker.position,\n        dragging: false,\n        onClick: $event => $options.handleMarkerClick(marker, index)\n      }, {\n        default: _withCtx(() => [_createVNode(_component_bm_label, {\n          content: marker.content,\n          labelStyle: {\n            color: 'red',\n            fontSize: '15px'\n          },\n          offset: {\n            width: -35,\n            height: 30\n          }\n        }, null, 8 /* PROPS */, [\"content\"])]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"position\", \"onClick\"]);\n    }), 128 /* KEYED_FRAGMENT */)), _createCommentVNode(\" 地图类型切换 \"), _createCommentVNode(\" <bm-map-type :map-types=\\\"['BMAP_NORMAL_MAP', 'BMAP_HYBRID_MAP']\\\" anchor=\\\"BMAP_ANCHOR_TOP_LEFT\\\"></bm-map-type> \"), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"button\", {\n      onClick: _cache[0] || (_cache[0] = (...args) => $options.zoomIn && $options.zoomIn(...args))\n    }, \"放大\"), _createElementVNode(\"button\", {\n      onClick: _cache[1] || (_cache[1] = (...args) => $options.zoomOut && $options.zoomOut(...args))\n    }, \"缩小\")]), _createCommentVNode(\" 显示当前用户点击的地点的经纬度 \"), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", null, \"纬度：\" + _toDisplayString($data.clickLat), 1 /* TEXT */), _createElementVNode(\"div\", null, \"经度：\" + _toDisplayString($data.clickLng), 1 /* TEXT */), _createElementVNode(\"div\", null, \"地址：\" + _toDisplayString($data.clickAddress), 1 /* TEXT */)]), _createCommentVNode(\" 步行路线 \"), $data.planRoute ? (_openBlock(), _createBlock(_component_bm_walking, {\n      key: 0,\n      start: $data.startPlace,\n      end: $data.endPlace,\n      location: \"上海\",\n      \"auto-viewport\": true,\n      selectFirstResult: true,\n      panel: true\n    }, null, 8 /* PROPS */, [\"start\", \"end\"])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 公交线路查询 \"), _createCommentVNode(\" <bm-bus keyword=\\\"123路公交车\\\" :auto-viewport=\\\"true\\\" location=\\\"上海\\\"></bm-bus> \")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"center\", \"zoom\", \"onClick\"])]), _createCommentVNode(\" 用于显示右边的信息框 \"), _createElementVNode(\"div\", _hoisted_5, [_createCommentVNode(\" 用于显示天气 \"), $data.weatherData ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [_createCommentVNode(\" 显示天气部分的title \"), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"p\", _hoisted_8, [_createTextVNode(_toDisplayString($data.weatherData.lives[0].city) + \"实时天气☁️ \", 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_9, _toDisplayString($data.weatherData.lives[0].reporttime), 1 /* TEXT */)])]), _createCommentVNode(\" 天气的具体信息+出行建议 \"), _createElementVNode(\"div\", _hoisted_10, [_createCommentVNode(\" 显示天气的具体信息 \"), _createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"p\", null, \"温度🌡️：\" + _toDisplayString($data.weatherData.lives[0].temperature) + \"°C\", 1 /* TEXT */), _createElementVNode(\"p\", null, \"天气☁️：\" + _toDisplayString($data.weatherData.lives[0].weather), 1 /* TEXT */), _createElementVNode(\"p\", null, \"湿度💧：\" + _toDisplayString($data.weatherData.lives[0].humidity) + \"%\", 1 /* TEXT */), _createElementVNode(\"p\", null, \"风向🌬：\" + _toDisplayString($data.weatherData.lives[0].winddirection) + \"风\", 1 /* TEXT */), _createElementVNode(\"p\", null, \"风力💨：\" + _toDisplayString($data.weatherData.lives[0].windpower) + \"级\", 1 /* TEXT */)]), _createCommentVNode(\" 显示具体的出行建议 \"), _createElementVNode(\"div\", null, [_createCommentVNode(\" title \"), _hoisted_12, _createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"div\", _hoisted_14, _toDisplayString($data.dialogBox), 1 /* TEXT */)]), _createCommentVNode(\" 添加按钮 \"), _createElementVNode(\"button\", {\n    id: \"dress-advice-btn\",\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.getDressAdvice && $options.getDressAdvice(...args))\n  }, \"穿衣建议\"), _createElementVNode(\"button\", {\n    id: \"travel-advice-btn\",\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.getTravelAdvice && $options.getTravelAdvice(...args))\n  }, \"出行建议\"), _createElementVNode(\"button\", {\n    id: \"weather-summary-btn\",\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.getWeatherSummary && $options.getWeatherSummary(...args))\n  }, \"天气概述\"), _createCommentVNode(\" 对话框 \")])])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 用于显示维基百科查询结果 \"), _createElementVNode(\"div\", _hoisted_15, [_createCommentVNode(\" 显示wiki部分的title \"), _createElementVNode(\"div\", _hoisted_16, [_createElementVNode(\"p\", _hoisted_17, [_createTextVNode(\" 景点介绍百科🔍 \"), _createElementVNode(\"span\", _hoisted_18, \" 下面是对“\" + _toDisplayString($data.searchPlace) + \"\\\"的搜索结果 \", 1 /* TEXT */)])]), _createCommentVNode(\" 显示搜索结果 \"), _createElementVNode(\"div\", _hoisted_19, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.WikiPage, page => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: page.title\n    }, [_createElementVNode(\"div\", _hoisted_20, [page.thumbnail && page.thumbnail.source ? (_openBlock(), _createElementBlock(\"img\", {\n      key: 0,\n      src: page.thumbnail.source,\n      alt: page.title\n    }, null, 8 /* PROPS */, _hoisted_21)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_22, [_createElementVNode(\"a\", {\n      href: page.url,\n      target: \"_blank\"\n    }, _toDisplayString(page.title), 9 /* TEXT, PROPS */, _hoisted_23), _createElementVNode(\"p\", _hoisted_24, _toDisplayString(page.extract), 1 /* TEXT */)])])]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createCommentVNode(\" 地图导航 \"), _createElementVNode(\"div\", _hoisted_25, [_createCommentVNode(\" 显示wiki部分的title \"), _hoisted_26, _createElementVNode(\"div\", null, [_createElementVNode(\"div\", _hoisted_27, \"当前选中地址：\" + _toDisplayString($data.clickAddress), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[5] || (_cache[5] = (...args) => $options.setStartPlace && $options.setStartPlace(...args)),\n    style: {\n      \"display\": \"inline-block\",\n      \"margin-left\": \"10px\"\n    }\n  }, \"设置为起点\"), _createElementVNode(\"button\", {\n    onClick: _cache[6] || (_cache[6] = (...args) => $options.setEndPlace && $options.setEndPlace(...args)),\n    style: {\n      \"display\": \"inline-block\",\n      \"margin-left\": \"10px\"\n    }\n  }, \"设置为终点\"), _createElementVNode(\"div\", null, [_createTextVNode(\"起点：\"), $data.startPlace ? (_openBlock(), _createElementBlock(\"span\", _hoisted_28, _toDisplayString($data.startPlace), 1 /* TEXT */)) : (_openBlock(), _createElementBlock(\"span\", _hoisted_29, \"未选择起点\"))]), _createElementVNode(\"div\", null, [_createTextVNode(\"终点：\"), $data.endPlace ? (_openBlock(), _createElementBlock(\"span\", _hoisted_30, _toDisplayString($data.endPlace), 1 /* TEXT */)) : (_openBlock(), _createElementBlock(\"span\", _hoisted_31, \"未选择终点\"))]), _createElementVNode(\"button\", {\n    onClick: _cache[7] || (_cache[7] = (...args) => $options.PlanRoute && $options.PlanRoute(...args))\n  }, \"开始规划\")])])])]);\n}","map":{"version":3,"names":["class","style","_createElementVNode","_createElementBlock","_hoisted_1","_createCommentVNode","_hoisted_2","_createVNode","_component_baidu_map","center","$data","zoom","onClick","$options","handleMapClick","_Fragment","_renderList","markers","marker","index","_createBlock","_component_bm_marker","key","position","dragging","$event","handleMarkerClick","_component_bm_label","content","labelStyle","color","fontSize","offset","width","height","_hoisted_3","_cache","args","zoomIn","zoomOut","_hoisted_4","_toDisplayString","clickLat","clickLng","clickAddress","planRoute","_component_bm_walking","start","startPlace","end","endPlace","location","selectFirstResult","panel","_hoisted_5","weatherData","_hoisted_6","_hoisted_7","_hoisted_8","lives","city","_hoisted_9","reporttime","_hoisted_10","_hoisted_11","temperature","weather","humidity","winddirection","windpower","_hoisted_12","_hoisted_13","_hoisted_14","dialogBox","id","getDressAdvice","getTravelAdvice","getWeatherSummary","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","searchPlace","_hoisted_19","WikiPage","page","title","_hoisted_20","thumbnail","source","src","alt","_hoisted_22","href","url","target","_hoisted_23","_hoisted_24","extract","_hoisted_25","_hoisted_26","_hoisted_27","setStartPlace","setEndPlace","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","PlanRoute"],"sources":["/Users/mac/Desktop/作业/微服务架构/Microservice-Personal-Project/src/components/map.vue"],"sourcesContent":["<template>\n  <div class=\"map-weather-container\">\n    <!-- 用于显示地图 -->\n    <div class=\"map\">\n      <baidu-map class=\"map\" :center=\"center\" :zoom=\"zoom\" :scroll-wheel-zoom=true @click=\"handleMapClick\">\n\n        <!-- 给特殊地点加上一些标注和说明 -->\n        <bm-marker v-for=\"(marker, index) in markers\" :key=\"index\" :position=\"marker.position\" :dragging=\"false\"\n          @click=\"handleMarkerClick(marker, index)\">\n          <bm-label :content=\"marker.content\" :labelStyle=\"{ color: 'red', fontSize: '15px' }\"\n            :offset=\"{ width: -35, height: 30 }\"></bm-label>\n        </bm-marker>\n        <!-- 地图类型切换 -->\n        <!-- <bm-map-type :map-types=\"['BMAP_NORMAL_MAP', 'BMAP_HYBRID_MAP']\" anchor=\"BMAP_ANCHOR_TOP_LEFT\"></bm-map-type> -->\n\n        <div class=\"zoom-controls\">\n          <button @click=\"zoomIn\">放大</button>\n          <button @click=\"zoomOut\">缩小</button>\n        </div>\n        <!-- 显示当前用户点击的地点的经纬度 -->\n        <div class=\"showAddress\">\n          <div>纬度：{{ clickLat }}</div>\n          <div>经度：{{ clickLng }}</div>\n          <div>地址：{{ clickAddress }}</div>\n        </div>\n\n        <!-- 步行路线 -->\n        <bm-walking v-if=\"planRoute\" :start=\"startPlace\" :end=\"endPlace\" location=\"上海\" :auto-viewport=\"true\" :selectFirstResult=\"true\" :panel=\"true\"></bm-walking>\n        <!-- 公交线路查询 -->\n        <!-- <bm-bus keyword=\"123路公交车\" :auto-viewport=\"true\" location=\"上海\"></bm-bus> -->\n      </baidu-map>\n    </div>\n\n    <!-- 用于显示右边的信息框 -->\n    <div class=\"info\">\n      <!-- 用于显示天气 -->\n      <div class=\"weather-container\" v-if=\"weatherData\">\n        <!-- 显示天气部分的title -->\n        <div class=\"weather-header\">\n          <p style=\"font-size: 24px; font-weight: bold; border-bottom: 1px solid #ccc\">\n            {{ weatherData.lives[0].city }}实时天气☁️\n            <span style=\"color: #aaa; font-size: 16px; font-weight: normal\">\n              {{ weatherData.lives[0].reporttime }}\n            </span>\n          </p>\n        </div>\n        <!-- 天气的具体信息+出行建议 -->\n        <div class=\"weather-details-container\">\n          <!-- 显示天气的具体信息 -->\n          <div class=\"weather-details\">\n            <p>温度🌡️：{{ weatherData.lives[0].temperature }}°C</p>\n            <p>天气☁️：{{ weatherData.lives[0].weather }}</p>\n            <p>湿度💧：{{ weatherData.lives[0].humidity }}%</p>\n            <p>风向🌬：{{ weatherData.lives[0].winddirection }}风</p>\n            <p>风力💨：{{ weatherData.lives[0].windpower }}级</p>\n          </div>\n          <!-- 显示具体的出行建议 -->\n          <div>\n            <!-- title -->\n            <div style=\"font-size: 18px; font-weight: bold;\">出行智能小助手</div>\n            <div class=\"weather-dialog-box\">\n              <div class=\"dialog-content\">{{ dialogBox }}</div>\n            </div>\n            <!-- 添加按钮 -->\n            <button id=\"dress-advice-btn\" @click=\"getDressAdvice\">穿衣建议</button>\n            <button id=\"travel-advice-btn\" @click=\"getTravelAdvice\">出行建议</button>\n            <button id=\"weather-summary-btn\" @click=\"getWeatherSummary\">天气概述</button>\n            <!-- 对话框 -->\n          </div>\n        </div>\n      </div>\n\n      <!-- 用于显示维基百科查询结果 -->\n      <div class=\"wiki-search\">\n        <!-- 显示wiki部分的title -->\n        <div class=\"weather-header\">\n          <p style=\"font-size: 24px; font-weight: bold; border-bottom: 1px solid #ccc\">\n            景点介绍百科🔍\n            <span style=\"color: #aaa; font-size: 16px; font-weight: normal\">\n              下面是对“{{ searchPlace }}\"的搜索结果\n            </span>\n          </p>\n        </div>\n\n        <!-- 显示搜索结果 -->\n        <div class=\"searchresult\">\n          <div v-for=\"page in WikiPage\" :key=\"page.title\">\n            <div class=\"page-item\">\n              <img v-if=\"page.thumbnail && page.thumbnail.source\" :src=\"page.thumbnail.source\" :alt=\"page.title\" />\n              <div class=\"page-content\">\n                <a :href=\"page.url\" target=\"_blank\">{{ page.title }}</a>\n                <p style=\"font-size: small;\">{{ page.extract }}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- 地图导航 -->\n      <div class=\"guide-container\">\n        <!-- 显示wiki部分的title -->\n        <div class=\"weather-header\">\n          <p style=\"font-size: 24px; font-weight: bold; border-bottom: 1px solid #ccc\">\n            路线规划🚗\n          </p>\n        </div>\n        <div>\n          <div style=\"display:inline-block;\">当前选中地址：{{ clickAddress }}</div>\n          <button @click=\"setStartPlace\" style=\"display:inline-block;margin-left:10px;\">设置为起点</button>\n          <button @click=\"setEndPlace\" style=\"display:inline-block;margin-left:10px;\">设置为终点</button>\n          <div>起点：<span v-if=\"startPlace\">{{ startPlace }}</span>\n            <span v-else>未选择起点</span>\n          </div>\n          <div>终点：<span v-if=\"endPlace\">{{ endPlace }}</span>\n            <span v-else>未选择终点</span>\n          </div>\n          <button @click=\"PlanRoute\">开始规划</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n/* eslint-disable */\nimport {\n  BaiduMap,\n  BmWalking,\n  BmInfoWindow,\n  BmBoundary,\n  BmScale,\n  BmMarker,\n  BmLabel,\n  BmLocalSearch,\n  BmCircle,\n  BmBus\n} from \"vue-baidu-map-3x\";\nimport { ref, onMounted } from \"vue\";\nimport axios from \"axios\";\n// import { Configuration, OpenAIApi } from \"openai\"; // 根据实际情况调整库的导入路径\nimport OpenAI from \"openai\";\nexport default {\n  components: {\n    BaiduMap,\n    BmWalking,\n    BmInfoWindow,\n    BmBoundary,\n    BmScale,\n    BmMarker,\n    BmLabel,\n    BmLocalSearch,\n    BmCircle,\n    BmBus\n  },\n\n  data() {\n    return {\n      center: { lat: 31.23, lng: 121.474 },\n      zoom: 15,\n      //一些景点坐标点\n      markers: [\n        {\n          position: { lng: 121.4912, lat: 31.2438 },\n          content: \"南京东路\",\n          show: false,\n        },\n        {\n          position: { lng: 121.4811, lat: 31.2346 },\n          content: \"人民广场\",\n          show: false,\n        },\n        {\n          position: { lng: 121.5073, lat: 31.2437 },\n          content: \"陆家嘴\",\n          show: false,\n        },\n        {\n          position: { lng: 121.4972, lat: 31.2429 },\n          content: \"外滩\",\n          show: false,\n        },\n        {\n          position: { lng: 121.4972, lat: 31.2489 },\n          content: \"外白渡桥\",\n          show: false,\n        },\n        {\n          position: { lng: 121.4896, lat: 31.2482 },\n          content: \"乍浦路桥\",\n          show: false,\n        },\n        {\n          position: { lng: 121.4943, lat: 31.2343 },\n          content: \"豫园\",\n          show: false,\n        },\n        {\n          position: { lng: 121.483, lat: 31.2342 },\n          content: \"上海博物馆\",\n          show: false,\n        },\n        {\n          position: { lng: 121.4746, lat: 31.2266 },\n          content: \"淮海中路\",\n          show: false,\n        },\n        {\n          position: { lng: 121.5083, lat: 31.2469 },\n          content: \"东方明珠\",\n          show: false,\n        },\n        {\n          position: { lng: 121.4526, lat: 31.2292 },\n          content: \"静安寺\",\n          show: false,\n        },\n        {\n          position: { lng: 121.4449, lat: 31.211 },\n          content: \"武康大楼\",\n          show: false,\n        },\n        {\n          position: { lng: 121.4455, lat: 31.2102 },\n          content: \"宋庆龄故居\",\n          show: false,\n        },\n        {\n          position: { lng: 121.4427, lat: 31.2015 },\n          content: \"徐家汇\",\n          show: false,\n        },\n        {\n          position: { lng: 121.4759, lat: 31.2139 },\n          content: \"田子坊\",\n          show: false,\n        },\n        {\n          position: { lng: 121.4812, lat: 31.2229 },\n          content: \"中共一大会址\",\n          show: false,\n        },\n        {\n          position: { lng: 121.5076, lat: 31.2132 },\n          content: \"南浦大桥\",\n          show: false,\n        },\n        {\n          position: { lng: 121.4691, lat: 31.2424 },\n          content: \"上海自然博物馆\",\n          show: false,\n        },\n        {\n          position: { lng: 121.4761, lat: 31.2199 },\n          content: \"思南公馆\",\n          show: false,\n        },\n        {\n          position: { lng: 121.4761, lat: 31.2199 },\n          content: \"四川北路\",\n          show: false,\n        },\n        {\n          position: { lng: 121.4761, lat: 31.2199 },\n          content: \"思南公馆\",\n          show: false,\n        },\n        {\n          position: { lng: 121.4899, lat: 31.2776 },\n          content: \"鲁迅公园\",\n          show: false,\n        },\n        {\n          position: { lng: 121.4908, lat: 31.2581 },\n          content: \"四川北路\",\n          show: false,\n        },\n        {\n          position: { lng: 121.5055, lat: 31.2529 },\n          content: \"北外滩\",\n          show: false,\n        },\n        {\n          position: { lng: 121.5331, lat: 31.2561 },\n          content: \"杨浦滨江\",\n          show: false,\n        },\n        {\n          position: { lng: 121.49, lat: 31.2711 },\n          content: \"甜爱路\",\n          show: false,\n        },\n        {\n          position: { lng: 121.488, lat: 31.2696 },\n          content: \"多伦路文化名人街\",\n          show: false,\n        },\n        {\n          position: { lng: 121.5088, lat: 31.2888 },\n          content: \"同济大学\",\n          show: false,\n        },\n        {\n          position: { lng: 121.5055, lat: 31.2529 },\n          content: \"北外滩\",\n          show: false,\n        },\n        {\n          position: { lng: 121.5055, lat: 31.2529 },\n          content: \"北外滩\",\n          show: false,\n        },\n        {\n          position: { lng: 121.5055, lat: 31.2529 },\n          content: \"北外滩\",\n          show: false,\n        },\n        {\n          position: { lng: 121.5055, lat: 31.2529 },\n          content: \"北外滩\",\n          show: false,\n        },\n        {\n          position: { lng: 121.5055, lat: 31.2529 },\n          content: \"北外滩\",\n          show: false,\n        },\n      ],\n      weatherData: null, //存储天气数据\n      city: \"310000\", //上海\n      selectedMarkerIndex: -1, // 记录选中的标记索引\n      dialogBox: \"点击下面的按钮以获得智能小助手建议～\",\n      WikiPage: [], // 新添加的空数组\n      searchPlace: \"上海\",\n\n      //点击获取点击地点的经度和纬度\n      clickLat: 31.23,\n      clickLng: 121.474,\n      clickAddress: \"上海市杨浦区四平路1239号\",\n\n      //设置搜索范围\n      nearby: {\n        center: {\n          lng: 121.474,\n          lat: 31.23\n        },\n        radius: 10000\n      },\n      placeKeyword: \"\",\n      startPlace: \"\",\n      startPosition:null,\n      endPlace: \"\",\n      planRoute: false,\n    };\n  },\n  watch: {\n    weatherData(newData) {\n      console.log(newData);\n      // 在这里执行你希望在 weatherData 更新后立即执行的逻辑\n      // console.log(this.weatherData);\n    },\n  },\n  created() {\n    this.getWeatherData();\n  },\n\n  mounted() {\n    this.mapInstance = this.$refs.map ? this.$refs.map.getMap() : null;\n    // this.getWeatherData();\n    this.searchWiki(\"上海\")\n  },\n\n  methods: {\n    //通过点击地图上的点获得该点具体的地点名称\n    handleMapClick(event) {\n      const point = new BMap.Point(event.point.lng, event.point.lat);\n      const geoc = new BMap.Geocoder();\n\n      // 调用百度地图 API 的逆地理编码方法获取地名\n      geoc.getLocation(point, (result) => {\n        if (result) {\n          const address = result.address; // 地名\n          const lng = result.point.lng; // 经度\n          const lat = result.point.lat; // 纬度\n\n          this.clickLat = lat;\n          this.clickLng = lng;\n          this.clickAddress = address;\n\n          // 处理获取到的地名、经纬度数据\n          console.log(\"地名:\", address);\n          console.log(\"经度:\", lng);\n          console.log(\"纬度:\", lat);\n        }\n      });\n    },\n    //放大地图\n    zoomIn() {\n      this.zoom += 1; // 放大地图缩放级别\n      // this.$refs.baiduMap.setZoom(this.zoom); // 调用 setZoom 方法更新地图缩放级别\n    },\n    //缩小地图\n    zoomOut() {\n      this.zoom -= 1; // 缩小地图缩放级别\n      // this.$refs.baiduMap.setZoom(this.zoom); // 调用 setZoom 方法更新地图缩放级别\n    },\n\n    //设置为起点\n    setStartPlace() {\n      this.startPlace = this.clickAddress\n    },\n\n    //设置为终点\n    setEndPlace() {\n      this.endPlace = this.clickAddress\n    },\n    PlanRoute() {\n      this.planRoute = true\n    },\n    //调用天气api，已经可以调取成功\n    getWeatherData() {\n      const key = \"\t3f6157ccb2e4ec191a030932e211ffaa\"; // 将 `your key` 替换成你的高德开发者key\n      const url = `https://restapi.amap.com/v3/weather/weatherInfo?key=${key}&city=${this.city}`;\n      console.log(\"获取天气\");\n      axios\n        .get(url)\n        .then((response) => {\n          if (response.status === 200) {\n            this.weatherData = response.data;\n            console.log(response.data);\n          }\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    },\n    //调用Wiki百科API\n    async searchWiki(keyword) {\n      try {\n        const response = await axios.get(\"https://zh.wikipedia.org/w/api.php\", {\n          params: {\n            format: \"json\",\n            action: \"query\",\n            generator: \"search\",\n            gsrnamespace: 0,\n            gsrlimit: 5,\n            prop: \"pageimages|extracts\",\n            pilimit: \"max\",\n            exintro: true,\n            explaintext: true,\n            exsentences: 1,\n            exlimit: \"max\",\n            origin: \"*\",\n            gsrsearch: keyword,\n          },\n        });\n        const pages = response.data.query.pages;\n        const wikiPages = [];\n        for (let pageId in pages) {\n          const page = pages[pageId];\n          const wikiPage = {\n            title: page.title,\n            thumbnail: page.thumbnail,\n            extract: page.extract,\n            url: \"\"\n          };\n          // 将title拼接成访问中文维基百科的链接\n          wikiPage.url = \"http://zh.wikipedia.org/wiki/\" + encodeURIComponent(page.title);\n          wikiPages.push(wikiPage);\n        }\n        this.WikiPage = wikiPages;\n        console.log(this.WikiPage);\n      } catch (error) {\n        console.error(\"Error:\", error);\n      }\n    },\n    handleMarkerClick(marker, index) {\n      // const details = marker.name; // 假设标记对象中有一个属性 name 存储地点名称\n      console.log(\"点击了\" + index);\n      const details = this.markers[index].content;\n      console.log(details);\n      this.searchPlace = details;\n      //调用Wiki的接口\n      var href = this.searchWiki(details);\n      //调用GPT接口\n      // this.initGPT3(details);\n    },\n\n    //点击穿衣按钮之后获取穿衣建议\n    getDressAdvice() {\n      const details =\n        \"已知今天上海的天气数据如下所示：\" +\n        \"湿度：\" +\n        this.weatherData.lives[0].humidity +\n        \"，温度：\" +\n        this.weatherData.lives[0].temperature +\n        \"，天气：\" +\n        this.weatherData.lives[0].weather +\n        \"，风力：\" +\n        this.weatherData.lives[0].windpower +\n        \"，请问可以给出穿衣建议吗？比如说今天适合穿什么样的衣服？比如如果温度高于25度就适合穿短袖，如果温度在17到25之间左右就可以穿衬衫等等（用可爱俏皮的语句直接生成一段话，50到80字左右，不要列出一点一点的，也不要太长）\";\n      console.log(details);\n      this.initGPT3(details, 1);\n      this.showResponse();\n    },\n    //点击出行按钮之后获取出行建议\n    getTravelAdvice() {\n      const details =\n        \"已知今天上海的天气数据如下所示：\" +\n        \"湿度：\" +\n        this.weatherData.lives[0].humidity +\n        \"，温度：\" +\n        this.weatherData.lives[0].temperature +\n        \"，天气：\" +\n        this.weatherData.lives[0].weather +\n        \"，风力：\" +\n        this.weatherData.lives[0].windpower +\n        \"，请问可以给出出行建议吗？就根据我给你的上海目前的天气信息给出，比如说如果今天下雨就建议打车或者地铁，如果今天天晴就建议骑自行车或者走路，如果风大就尽量不要骑车等等。（用可爱俏皮的语句直接生成一段话，50到80字左右，不要列出一点一点的，也不要太长）\";\n      console.log(details);\n      this.initGPT3(details, 1);\n      this.showResponse();\n    },\n    //点击天气概述按钮之后获取天气概述\n    getWeatherSummary() {\n      const details =\n        \"已知今天上海的天气数据如下所示：\" +\n        \"湿度：\" +\n        this.weatherData.lives[0].humidity +\n        \"，温度：\" +\n        this.weatherData.lives[0].temperature +\n        \"，天气：\" +\n        this.weatherData.lives[0].weather +\n        \"，风力：\" +\n        this.weatherData.lives[0].windpower +\n        \"，请你用可爱俏皮的语句，同时写一首唐诗来描述今天的天气，这首诗需要包含今天的天气特点以及人们的活动，景色等等\";\n      console.log(details);\n      this.initGPT3(details, 1);\n      this.showResponse();\n    },\n    showResponse() {\n      // 将回复显示在对话框中\n      this.dialogBox = \"正在生成中......\";\n    },\n\n    async initGPT3(details, choice) {\n      const API_KEY = \"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\"; //输入API Key\n      const openai = new OpenAI({\n        apiKey: API_KEY,\n        dangerouslyAllowBrowser: true,\n      });\n      console.log(\"正在生成介绍\" + details + \"的信息\");\n      const chatCompletion = await openai.chat.completions.create({\n        messages: [\n          {\n            role: \"user\",\n            content: `你好，${details}`,\n          },\n        ],\n        model: \"gpt-3.5-turbo\",\n      });\n      console.log(chatCompletion);\n      console.log(chatCompletion.choices[0].message.content);\n      // 说明此时是在生成智能出行小助手\n      if (choice == 1) {\n        //显示在消息框内\n        this.dialogBox = chatCompletion.choices[0].message.content;\n      }\n      else {\n\n      }\n    },\n\n  }\n};\n</script>\n\n<style>\n.map-weather-container {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  /* 将屏幕分为两列 */\n}\n\n.map {\n  /* position: relative; */\n  grid-column: 1 / 2;\n  /* 将map容器放在第一列 */\n  display: flex;\n  width: 97%;\n  height: 950px;\n}\n\n.zoom-controls {\n  position: absolute;\n  top: 10px;\n  left: 10px;\n  z-index: 9999;\n}\n\n.info {\n  grid-column: 2 / 3;\n}\n\n.weather-container {\n  /* position: absolute; */\n  /* display: flex; */\n  /* 将weather-container容器放在第二列 */\n  width: 96%;\n  height: 283px;\n  top: 10px;\n  left: 10px;\n  z-index: 9999;\n  background-color: #b0e2ff;\n  /* 设置背景颜色为浅蓝色 */\n  border-radius: 10px;\n  /* 设置圆角边框半径为10px */\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  /* 设置阴影效果 */\n  /* 添加其他样式 */\n}\n\n.weather-header {\n  margin-left: 28px;\n  margin-right: 28px;\n}\n\n.weather-details {\n  grid-column: 1 / 2;\n  /* 将details容器放在第一列 */\n  margin-left: 28px;\n}\n\n.weather-details-container {\n  display: grid;\n  grid-template-columns: 1fr 3fr;\n  /* 将屏幕分为四份，第一列占据一个份额，第二列占据三个份额 */\n}\n\n.weather-dialog-box {\n  width: 94%;\n  height: 110px;\n  margin-top: 10px;\n  background-color: whitesmoke;\n  border-radius: 6px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  /* 设置阴影效果 */\n  padding: 10px;\n  overflow: auto;\n  max-height: 100px;\n  /* 设置最大高度，超过该高度将显示滚动条 */\n}\n\n.dialog-content {\n  white-space: pre-wrap;\n  /* 处理换行符等空白字符 */\n}\n\n.wiki-search {\n  width: 96%;\n  height: 283px;\n  margin-top: 20px;\n  top: 10px;\n  left: 10px;\n  z-index: 9999;\n  background-color: #b0e2ff;\n  /* 设置背景颜色为浅蓝色 */\n  border-radius: 10px;\n  /* 设置圆角边框半径为10px */\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n\n}\n\n.searchresult {\n  max-height: 210px;\n  /* 设置最大高度 */\n  overflow: auto;\n  /* 当内容超出高度时显示滚动条 */\n  margin: 0px 20px 0px 20px;\n}\n\n.page-item {\n  display: flex;\n  margin-top: 10px;\n}\n\n.page-item img {\n  width: 100px;\n  height: 100px;\n  margin-right: 10px;\n}\n\n.page-content {\n  flex: 1;\n}\n\n.showAddress {\n  background-color: #fff;\n  position: absolute;\n  top: 50px;\n  left: 10px;\n  z-index: 9999;\n  /* height:100px; */\n  /* width: 400px; */\n}\n\n.guide-container {\n  width: 96%;\n  height: 283px;\n  margin-top: 20px;\n  top: 10px;\n  left: 10px;\n  z-index: 9999;\n  background-color: #b0e2ff;\n  /* 设置背景颜色为浅蓝色 */\n  border-radius: 10px;\n  /* 设置圆角边框半径为10px */\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n}\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}